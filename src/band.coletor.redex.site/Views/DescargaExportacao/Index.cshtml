@{
    ViewBag.Title = "Descarga Exportacao";
}
@model Band.Coletor.Redex.Site.Models.DescargaExportacao.DescargaExportacaoViewModel
<div>
    <div class="row padding-bottom">
        <div class="col-md-12">
            <h4>
                <i class="fas fa-truck fa-lg"></i>
                Descarga Exportacao
            </h4>
        </div>
    </div>
    <!--FORM-->
    <form id="formTalie" method="post" action="@Url.Action("Buscar", "DescargaExportacao")">
        <div class="row padding-bottom">
            <div class="form-group col-md-3">
                <label for="registro">REGISTRO</label>
                <input type="text" class="form-control" id="registro" name="registro" value="@Model.Registro.CodigoRegistro" placeholder="Digite o registro">
            </div>
            <div class="form-group col-md-3">
                <label for="inicio">INICIO</label>
                <input type="datetime-local" class="form-control" id="inicio" name="inicio" value="@Model.Registro.Talie?.Inicio ?? ''" disabled>
            </div>
            <div class="form-group col-md-3">
                <label for="termino">TERMINO</label>
                <input type="datetime-local" class="form-control" id="termino" name="termino" value="@Model.Registro.Talie?.Termino ?? ''" disabled>
            </div>
            <div class="form-group col-md-3">
                <label for="talie">TALIE</label>
                <input type="text" class="form-control" id="talie" name="codigoTalie" value="@Model.Registro.Talie?.Id ?? ''" disabled>
            </div>
        </div>

        <div class="row padding-bottom">
            <div class="form-group col-md-3">
                <label for="placa">PLACA</label>
                <input type="text" class="form-control" id="placa" name="placa" placeholder="Digite a placa" value="@Model.Registro.Placa" disabled>
            </div>
            <div class="form-group col-md-3">
                <label for="reserva">RESERVA</label>
                <input type="text" class="form-control" id="reserva" name="reserva" placeholder="Digite a reserva" value="@Model.Registro.Reserva" disabled>
            </div>
            <div class="form-group col-md-3">
                <label for="cliente">CLIENTE</label>
                <input type="text" class="form-control" id="cliente" name="cliente" placeholder="Digite o cliente" value="@Model.Registro.Cliente" disabled>
            </div>
        </div>

        <div class="row padding-bottom">
            <div class="form-group col-md-6">
                <button type="button" onclick="CarregarRegistro()" class="btn btn-primary btn-block">Buscar</button>
            </div>
            <div class="form-group col-md-6">
                <button type="reset" class="btn btn-secondary btn-block">Restaurar Dados</button>
            </div>
        </div>
        <!--Combobox conferente, equipe, operacao-->
        <div class="row padding-bottom">
            <div class="form-group col-sm-4">
                @Html.Partial("~/Views/Shared/Components/Selects/component_coletor_select.cshtml", new ComponentColetorSelectModel
                {
                    Id = "cbConferente",
                    Name = "conferente",
                    Descricao = "Selecione o Conferente",
                    Value = @Model.Registro.Talie?.Conferente,
                    Disabled = false,
                    Options = Model.Conferentes.Select(e => new SelectOption
                    {
                        Value = e.Id,
                        Text = e.Descricao
                    }).ToList()
                })
            </div>
            <div class="form-group col-sm-4">
                @Html.Partial("~/Views/Shared/Components/Selects/component_coletor_select.cshtml", new ComponentColetorSelectModel
                {
                    Id = "cbEquipe",
                    Name = "equipe",
                    Descricao = "Selecione a Equipe",
                    Value = Model.Registro.Talie?.Equipe,
                    Disabled = false,
                    Options = Model.Equipes.Select(e => new SelectOption
                    {
                        Value = e.Id,
                        Text = e.Descricao
                    }).ToList()
                })
            </div>
            <div class="form-group col-sm-4">
                @Html.Partial("~/Views/Shared/Components/Selects/component_coletor_select.cshtml", new ComponentColetorSelectModel
                {
                    Id = "cbOperacao",
                    Name = "operacao",
                    Descricao = "Selecione a Operacao",
                    Value = Convert.ToInt32(@Model.Registro.Talie?.Operacao),
                    Disabled = false,
                    Options = Model.Operacoes.Select(e => new SelectOption
                    {
                        Value = e.Id,
                        Text = e.Descricao
                    }).ToList()
                })
            </div>
        </div>
    </form>

    <pre id="formModel"></pre>

    <!--Tabela de itens-->
    <div class="table-responsive">
        <table id="tabelaItens" class="table table-striped table-bordered">
            <thead class="">
                <tr>
                    <th>NF</th>
                    <th>Item</th>
                    <th>Embalagem</th>
                    <th>Quantidade NF</th>
                    <th>Quantidade Descarga</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                <!-- As linhas serão adicionadas dinamicamente -->
            </tbody>
        </table>
    </div>

</div>

<!--MODAL EDITAR ITEM-->
<div class="modal fade" id="editarItemModal" tabindex="-1" role="dialog" aria-labelledby="editarItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editarItemModalLabel">Editar Item</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form method="post" action="@Url.Action("Buscar", "DescargaExportacao")">
                    <div class="row padding-bottom">
                        <div class="form-group col-sm-4">
                            <label for="cbItensDescarregados">ITENS DESCARREGADOS:</label>
                            <select id="cbItensDescarregados" class="form-control">
                                @*@foreach (var item in Model.Itens)
                                    {
                                        <option value="@item.CodigoItem">@item.Descricao</option>
                                    }*@
                            </select>
                        </div>
                    </div>
                    <div class="row padding-bottom">
                        <div class="form-group col-md-3">
                            <label for="notafiscal">NOTA FISCAL</label>
                            <input type="text" class="form-control" id="numeroNotaFiscal" name="numeroNotaFiscal" placeholder="Digite a nota fiscal">
                        </div>
                        <div class="form-group col-md-3">
                            <label for="quantidade">QUANTIDADE</label>
                            <input type="text" class="form-control" id="quantidade" name="quantidade" data-original="100" data-item-id="123" value="100">
                        </div>
                        <div class="form-group col-md-3">
                            <label for="codigo_embalagem">COD. EMBALAGEM</label>
                            <input type="text" class="form-control" id="codigo_embalagem" name="codigo_embalagem">
                        </div>
                        <div class="form-group col-md-3">
                            <label for="dc_embalagem">DC. EMBALAGEM</label>
                            <input type="text" class="form-control" id="dc_embalagem" name="dc_embalagem">
                        </div>
                    </div>
                    <div class="row padding-bottom">
                        <div class="form-group col-md-3">
                            <label for="comprimento">COMPRIMENTO</label>
                            <input type="text" class="form-control" id="comprimento" name="comprimento">
                        </div>
                        <div class="form-group col-md-3">
                            <label for="largura">LARGURA</label>
                            <input type="text" class="form-control" id="largura" name="largura">
                        </div>
                        <div class="form-group col-md-3">
                            <label for="altura">ALTURA</label>
                            <input type="text" class="form-control" id="altura" name="altura">
                        </div>
                        <div class="col-sm-1 form-group mt-5">
                            <input type="checkbox" id="chkMadeiraInd" />
                            <label for="chkMadeiraInd">Madeira</label>
                        </div>
                        <div class="col-sm-1 form-group mt-5">
                            <input type="checkbox" id="chkFragil" />
                            <label for="chkFragil">Fragil</label>
                        </div>
                    </div>
                    <div class="row padding-bottom">
                        <div class="form-group col-md-3">
                            <label for="peso">PESO</label>
                            <input type="text" class="form-control" id="peso" name="peso">
                        </div>
                        <div class="form-group col-md-3">
                            <label for="imo">IMO</label>
                            <input type="text" class="form-control" id="imo" name="imo">
                        </div>
                        <div class="form-group col-md-2">
                            <label for="imo_1">-</label>
                            <input type="text" class="form-control" id="imo_1" name="imo_1">
                        </div>
                        <div class="form-group col-md-2">
                            <label for="imo_2">-</label>
                            <input type="text" class="form-control" id="imo_2" name="imo_2">
                        </div>
                        <div class="form-group col-md-2">
                            <label for="imo_3">-</label>
                            <input type="text" class="form-control" id="imo_3" name="imo_3">
                        </div>
                    </div>
                    <div class="row padding-bottom">
                        <div class="form-group col-md-3">
                            <label for="uno">UNO</label>
                            <input type="text" class="form-control" id="uno" name="uno">
                        </div>
                        <div class="form-group col-md-3">
                            <label for="uno_1">-</label>
                            <input type="text" class="form-control" id="uno_1" name="uno_1">
                        </div>
                        <div class="form-group col-md-3">
                            <label for="uno_2">-</label>
                            <input type="text" class="form-control" id="uno_2" name="uno_2">
                        </div>
                        <div class="form-group col-md-3">
                            <label for="uno_3">-</label>
                            <input type="text" class="form-control" id="uno_3" name="uno_3">
                        </div>
                    </div>
                    <div class="row padding-bottom">
                        <div class="form-group col-md-3">
                            <label for="remonte">REMONTE</label>
                            <input type="text" class="form-control" id="remonte" name="remonte">
                        </div>
                        <div class="form-group col-md-3">
                            <label for="fumigacao">FUMIGACAO</label>
                            <input type="text" class="form-control" id="fumigacao" name="fumigacao">
                        </div>
                    </div>
                    @*<div class="row padding-bottom">
                            <div class="form-group col-md-6">
                                <button type="button" id="btnBuscarNotaFiscal" data-url="@Url.Action("BuscarNotaFiscal", "DescargaExportacao")" class="btn btn-primary btn-block">Buscar</button>
                            </div>
                            <div class="form-group col-md-6">
                                <button type="reset" class="btn btn-secondary btn-block">Abrir</button>
                            </div>
                        </div>*@
                </form>
                <div id="modalContent"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                <button type="button" class="btn btn-primary" id="salvarAlteracoes">Salvar Alterações</button>
            </div>
        </div>
    </div>
</div>

<!--MODAL OBS-->
<div class="modal fade" id="observacaoModal" tabindex="-1" role="dialog" aria-labelledby="observacaoModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="observacaoModalLabel">Adicionar Observação</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="formObservacao">
                    <div class="form-group">
                        <label for="observacaoInput">Observação</label>
                        <textarea id="observacaoInput" class="form-control" rows="4" placeholder="Digite sua observação aqui"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                <button type="button" id="salvarObservacao" class="btn btn-primary">Salvar</button>
            </div>
        </div>
    </div>
</div>

<!-- Footer com botões -->
<footer class="fixed-bottom bg-light py-3">
    <div class="container d-flex flex-wrap justify-content-start">
        <a id="lnkObservacao" href="#" class="btn btn-warning flex-grow-1 mx-1 my-1" data-toggle="modal" data-target="#observacaoModal">
            <span aria-hidden="true" class="fa fa-sticky-note"></span>&nbsp;&nbsp;Observacao
        </a>


        <a id="lnkCancelar" href="#" class="btn btn-warning flex-grow-1 mx-1 my-1">
            <span aria-hidden="true" class="fa fa-window-close"></span>&nbsp;&nbsp;Cancelar
        </a>

        <a id="lnkGravar" href="#" data-url="@Url.Action("GravarTalie", "DescargaExportacao")" class="btn btn-warning flex-grow-1 mx-1 my-1">
            <span aria-hidden="true" class="fa fa-check"></span>&nbsp;&nbsp;Gravar
        </a>

        <a id="lnkMarcantes" href="@Url.Action("DescargaExportacaoMarcantes", "DescargaExportacao")" class="btn btn-warning flex-grow-1 mx-1 my-1">
            <span aria-hidden="true" class="fa fa-sort-numeric-up"></span>&nbsp;&nbsp;Marcantes
        </a>

        <a id="lnkAvarias" href="#" class="btn btn-warning flex-grow-1 mx-1 my-1">
            <span aria-hidden="true" class="fa fa-window-close"></span>&nbsp;&nbsp;Avarias
        </a>

        <a id="lnkExcluir" href="#" class="btn btn-warning flex-grow-1 mx-1 my-1">
            <span aria-hidden="true" class="fa fa-trash-alt"></span>&nbsp;&nbsp;Excluir
        </a>

        <a id="lnkFinalizar" href="#" class="btn btn-warning flex-grow-1 mx-1 my-1">
            <span aria-hidden="true" class="fa fa-check"></span>&nbsp;&nbsp;Finalizar
        </a>

        @*<a id="lnkProximo" href="@Url.Action("DescargaExportacaoItens", "DescargaExportacao")" class="btn btn-warning flex-grow-1 mx-1 my-1">
                <span aria-hidden="true" class="fa fa-chevron-right"></span>&nbsp;&nbsp;Próximo
            </a>*@

        <a id="lnkHome" href="@Url.Content("~/Home")" class="btn btn-warning flex-grow-1 mx-1 my-1">
            <span aria-hidden="true" class="fa fa-home"></span>&nbsp;&nbsp;Home
        </a>
    </div>
</footer>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Objeto global para armazenar variáveis e funções
    window.App = window.App || {};
    App.TalieId = null; // Inicializa como null
    App.CodigoRegistro = null;

    function CarregarRegistro() {
        var registro = $("#registro").val();

        $.ajax({
            url: '/DescargaExportacao/CarregarRegistro',
            type: 'GET',
            data: { codigoRegistro: registro },
            success: function (response) {
                console.log(response);
                if (!response.sucesso) {
                    Swal.fire({
                        icon: 'info',
                        title: 'Info',
                        text: response.mensagem,
                    });
                } else {
                    // Preencher os campos do formulário com os dados retornados
                    formModel.codigoRegistro = response?.CodigoRegistro || '';
                    formModel.inicio = formatarDataParaInput(response?.Talie?.Inicio) || '';
                    document.getElementById('inicio').value = formModel.inicio;

                    formModel.termino = formatarDataParaInput(response?.Talie?.Termino) || '';
                    formModel.equipe = response?.Talie?.Equipe || '';
                    formModel.conferente = response?.Talie?.Conferente || '';
                    formModel.operacao = response?.Talie?.Operacao || '';
                    formModel.placa = response?.Placa || '';
                    formModel.reserva = response?.Reserva || '';
                    formModel.codigoTalie = response?.Talie?.Id || '';
                    formModel.cliente = response?.Cliente || '';

                    document.getElementById('observacaoInput').value = response?.Talie?.Observacao;

                    setComboBoxValue("cbOperacao", response?.Talie?.Operacao);

                    preencherFormularioComModel();
                    verificarCondicaoParaProximo();

                    const tabela = document.querySelector('#tabelaItens tbody');

                    // Limpa a tabela antes de adicionar novos itens
                    tabela.innerHTML = '';

                    App.TalieId = response?.Talie?.Id;
                    App.CodigoRegistro = response?.CodigoRegistro;
                    console.log('TalieId: ', App.TalieId);
                    // Itera sobre os itens e adiciona as linhas na tabela
                    if (response?.Talie?.TalieItem != null) {
                        let itens = response.Talie.TalieItem;
                        itens.forEach(item => {
                            const linha = `
                    <tr>
                        <td>${item.NotaFiscal || ''}</td>
                        <td>${item.Id || ''}</td>
                        <td>${item.Embalagem || ''}</td>
                        <td>${item.QtdNf || 0}</td>
                        <td>${item.QtdDescarga || 0}</td>
                        <td class="text-center">
                            <button class="btn btn-sm btn-primary" onclick="abrirModalEditarItem(${item.Id})" title="Editar">
                                <i class="fa fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-danger" title="Excluir" onclick="excluirTalieItem(${item.Id})">
                                <i class="fa fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
                            tabela.innerHTML += linha;
                        });
                    }
                }

            },
            error: function (xhr, status, error) {
                console.error("Erro ao obter dados do Talie:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Erro',
                    text: error,
                });
            }
        });
    }

    function abrirModalEditarItem(id) {
        CarregarDadosModal(id); // Carrega os dados do backend
        $('#editarItemModal').modal('show');
    }

    function CarregarDadosModal(idItem) {
        $.ajax({
            url: '/DescargaExportacao/EditarItemModal', // Endpoint do backend para carregar os dados
            type: 'GET',
            data: { id: idItem },
            success: function (response) {
                console.log('BuscaItem: ', response);
                // Preencher os campos do formulário com os dados retornados
                document.getElementById('cbItensDescarregados').value = response?.itemDescarregadoId || '';
                document.getElementById('numeroNotaFiscal').value = response?.NotaFiscal || '';
                document.getElementById('quantidade').value = response?.QtdDescarga || '';
                document.getElementById('codigo_embalagem').value = response?.CodigoEmbalagem || '';
                document.getElementById('dc_embalagem').value = response?.Embalagem || '';
                document.getElementById('comprimento').value = response?.Comprimento || '';
                document.getElementById('largura').value = response?.Largura || '';
                document.getElementById('altura').value = response?.Altura || '';
                document.getElementById('chkMadeiraInd').checked = response?.Madeira || false;
                document.getElementById('chkFragil').checked = response?.Fragil || false;
                document.getElementById('peso').value = response?.Peso || '';
                document.getElementById('imo').value = response?.Imo || '';
                document.getElementById('imo_1').value = response?.Imo1 || '';
                document.getElementById('imo_2').value = response?.Imo2 || '';
                document.getElementById('imo_3').value = response?.Imo3 || '';
                document.getElementById('uno').value = response?.Uno || '';
                document.getElementById('uno_1').value = response?.Uno1 || '';
                document.getElementById('uno_2').value = response?.Uno2 || '';
                document.getElementById('uno_3').value = response?.Uno3 || '';
                document.getElementById('remonte').value = response?.Remonte || '';
                document.getElementById('fumigacao').value = response?.Fumigacao || '';
                document.getElementById('quantidade').dataset.itemId = idItem;
                document.getElementById('quantidade').dataset.original = response?.Quantidade;

            },
            error: function (xhr, status, error) {
                console.error("Erro ao carregar os dados do item:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Erro',
                    text: data.mensagem,
                });
            }
        });
    }

    //SALVAR ITEM
    document.getElementById('salvarAlteracoes').addEventListener('click', function () {
        console.log('Salvar Item');
        const quantidade = parseFloat(document.getElementById('quantidade').value);
        const quantidadeOriginal = parseFloat(document.getElementById('quantidade').dataset.original);
        const id = document.getElementById('quantidade').dataset.itemId;

        if (quantidade <= 0) {
            Swal.fire({
                icon: 'info',
                title: 'Erro',
                text: 'A quantidade deve ser maior que zero.',
            });
            return;
        }

        if (quantidade > quantidadeOriginal) {
            Swal.fire({
                icon: 'info',
                title: 'Erro',
                text: 'Não é possível alterar um item para uma quantidade maior que o total da Nota Fiscal!',
            });
            return;
        }

        const itemAlterado = {
            TalieId: App.TalieId,
            Id: id,
            CodigoRegistro: App.CodigoRegistro,
            QtdDescarga: quantidade,
            NotaFiscal: document.getElementById('numeroNotaFiscal').value,
            CodigoEmbalagem: document.getElementById('codigo_embalagem').value,
            Embalagem: document.getElementById('dc_embalagem').value,
            Comprimento: document.getElementById('comprimento').value,
            Altura: document.getElementById('altura').value,
            Largura: document.getElementById('largura').value,
            Madeira: document.getElementById('chkMadeiraInd').checked,
            Fragil: document.getElementById('chkFragil').checked,
            Peso: document.getElementById('peso').value,
            //Imo: document.getElementById('imo').value,
            //Imo2: document.getElementById('imo2').value,
            //Imo3: document.getElementById('imo3').value,
            //Uno: document.getElementById('uno').value,
            //Uno2: document.getElementById('uno2').value,
            //Uno3: document.getElementById('uno3').value,
            //Uno4: document.getElementById('uno4').value,
            Remonte: document.getElementById('remonte').value,
            Fumigacao: document.getElementById('fumigacao').value
        };
        console.log(itemAlterado);

        fetch('/DescargaExportacao/SalvarAlteracoesItem', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(itemAlterado),
        })
            .then(response => response.json())
            .then(data => {
                if (data.sucesso) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Sucesso',
                        text: data.mensagem,
                    }).then(() => {
                        // Fechar modal e recarregar a tabela
                        $('#editarItemModal').modal('hide');
                        CarregarRegistro();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Erro',
                        text: data.mensagem,
                    });
                }
            })
            .catch(error => {
                console.error('Erro ao salvar alterações:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Erro',
                    text: 'Ocorreu um erro ao salvar as alterações. Tente novamente.',
                });
            });
    });

    //EXCLUIR UM ITEM
    function excluirTalieItem(talieItemId) {
        Swal.fire({
            title: 'Tem certeza?',
            text: 'Você realmente deseja excluir este item?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Sim, excluir',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: `/DescargaExportacao/ExlcluirTalieItem`,
                    type: 'POST',
                    data: { talieItemId: talieItemId },
                    success: function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Sucesso',
                            text: response
                        });
                        // Opcional: Recarrega os itens da tabela após a exclusão
                        CarregarRegistro();
                    },
                    error: function (xhr, status, error) {
                        console.error("Erro ao excluir o item:", error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Erro',
                            text: 'Ocorreu um erro ao tentar excluir o item. Tente novamente mais tarde.'
                        });
                    }
                });
            }
        });
    }



    ////REcarregar tabela de itens
    //function recarregarItensTabela(talieId) {
    //    if (!App.TalieId) {
    //        console.warn('TalieId não definido. Certifique-se de que foi carregado.');
    //        return;
    //    }

    //    $.ajax({
    //        url: '/DescargaExportacao/RecarregarTabelaItens',
    //        type: 'GET',
    //        data: { talieId: App.TalieId },
    //        success: function (response) {
    //            const tabela = $('#tabelaItens tbody');
    //            tabela.empty(); // Limpa a tabela atual
    //            console.log(response);
    //            if (response != null) {
    //                let itens = response;
    //                itens.forEach(item => {
    //                    const linha = `
    //                <tr>
    //                    <td>${item.NF || ''}</td>
    //                    <td>${item.Id || ''}</td>
    //                    <td>${item.Embalagem || ''}</td>
    //                    <td>${item.QtdNf || 0}</td>
    //                    <td>${item.QtdDescarga || 0}</td>
    //                    <td class="text-center">
    //                        <button class="btn btn-sm btn-primary" onclick="abrirModalEditarItem(${item.Id})" title="Editar">
    //                            <i class="fa fa-edit"></i>
    //                        </button>
    //                        <button class="btn btn-sm btn-danger" title="Excluir">
    //                            <i class="fa fa-trash"></i>
    //                        </button>
    //                    </td>
    //                </tr>
    //            `;
    //                    tabela.innerHTML += linha;
    //                });
    //            } else {
    //                tabela.append('<tr><td colspan="6" class="text-center">Nenhum item encontrado.</td></tr>');
    //            }
    //        },
    //        error: function (xhr, status, error) {
    //            console.error('Erro ao recarregar a tabela de itens:', error);
    //            alert('Ocorreu um erro ao recarregar os itens da tabela. Verifique o console para mais detalhes.');
    //        }
    //    });
    //}


</script>
@section Scripts {
    @Scripts.Render("~/bundles/descargaExportacao")

}

